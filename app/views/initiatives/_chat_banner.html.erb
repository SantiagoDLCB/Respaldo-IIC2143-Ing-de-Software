 <% if user_signed_in? && (current_user.has_role?(:member, @initiative) or current_user.has_role?(:admin_initiative, @initiative)) %>
        <button class="button is-primary js-modal-trigger"  data-target="chat_popup">
           Chat
        </button>

          <div id="chat_popup" class="modal" data-initiative-id="<%= @initiative.id %>">
            <div class="modal-background"></div>

            <div class="modal-content">
              <div class="box">
                <p>Chat</p>
                <div id="chat-content">
                  <% if @chat.empty? %>
                    <strong>Esta iniciativa no tiene conversaciones. ¡Sé el primero en hablar!</strong>
                  <% end %>
                    <!-- Muestra mensajes anteriores -->
                    <% @chat.each do |message| %>
                      <div class="message">
                        <strong><%= message.user.username %>:</strong>
                        <%= message.content %>
                      </div>
                    <% end %>
                </div>
                <div id="chat-input">
                  <%= form_with(model: @message, url: initiative_messages_path(@initiative), method: :post) do |form| %>
                    <%= form.text_area :content, placeholder: "Escribe tu mensaje aquí" %>
                    <%= form.hidden_field :user_id, value: current_user.id %>
                    <%= form.submit "Enviar mensaje", class: "btn btn-primary" %>
                  <% end %>
                </div>
              </div>
          </div>

  <button class="modal-close is-large" aria-label="close"></button>
   
    </div>
<% end %>

<script>
  // Function to update the chat content
  function updateChatContent() {
    var initiativeId = <%= @initiative.id %>;

    fetch('/messages/' + initiativeId )
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.text();
      })
      .then(data => {
        // Update the content of chat-content inside the modal
        var chatContent = document.getElementById('chat-content');
        chatContent.innerHTML = data;
      })
      .catch(error => {
        console.error('Error fetching chat content:', error);
        // Optionally, display an error message to the user or retry the request
      });
  }
updateChatContent();
        
        // Actualizar el contenido del chat y hacer scroll al fondo cada 5 segundos
        var intervalId = setInterval(updateChatContent, 2000); // Ajusta el intervalo según sea necesario


</script>
